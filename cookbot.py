from telebot import *
import pars
from conf import token_bot

bot = telebot.TeleBot(token_bot)

task_switcher = True

@bot.message_handler(commands=['start'])
def ready_work(message):
	global task_switcher
	task_switcher = True
	bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAINMmHxQ--bU7k29ptmeMC9X6c8IuQOAAJmBAACR_sJDEKts0woFwdfIwQ')
	bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç! –Ø –ë–æ—Ç –ö—É–ª–∏–Ω–∞—Ä, –ø–æ–º–æ–≥—É —Ç–µ–±–µ –≤ –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–∏ –≤–∫—É—Å–Ω—è—à–µ–∫.\n–ù–∞–ø–∏—à–∏ –º–Ω–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –±–ª—é–¥–∞ –∏ –ø–æ–≥–Ω–∞–ª–∏! ü•ß')

@bot.message_handler(commands=['new_search'])
def refresh_search(message):
	global task_switcher
	task_switcher = True
	bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAIjjGMSDDQJoyeNo2hN_jt5YkIQygmLAAJsBAACR_sJDHDW7bY87FWhKQQ')
	bot.send_message(message.chat.id, '–î–∞–≤–∞–π –ø–æ–∏—â–µ–º –µ—â—ë —Ä–µ—Ü–µ–ø—Ç—ã!üçî')

@bot.message_handler(commands=['help'])
def refresh_search(message):
	global task_switcher
	task_switcher = True
	bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAIjkGMSDE06Xt7juqwr5bWnAS-4GDH0AAJ7BAACR_sJDEp5b1zC0IaRKQQ')
	bot.send_message(message.chat.id, '–ë–æ—Ç —Å–æ–∑–¥–∞–Ω —á—Ç–æ–±—ã —É–ø—Ä–æ—Å—Ç–∏—Ç—å –ø–æ–∏—Å–∫ —Ä–µ—Ü–µ–ø—Ç–æ–≤ –±–ª—é–¥ –ø—Ä—è–º–æ –≤ —á–∞—Ç–µ —Ç–µ–ª–µ–≥—Ä–∞–º–º–∞, –±–µ–∑ –≤—Å—è–∫–∏—Ö "–∫–æ–ø–∞–Ω–∏–π" –≤ –º–æ–±–∏–ª—å–Ω–æ–º –±—Ä–∞—É–∑–µ—Ä–µ.\n–ü—Ä–∏–Ω—Ü–∏–ø —Ä–∞–±–æ—Ç—ã\
 –ø—Ä–æ—Å—Ç–æ–π - –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç–µ –±–æ—Ç—É –Ω–∞–∑–≤–∞–Ω–∏–µ –±–ª—é–¥–∞ –∏ –æ–Ω –≤—ã–¥–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∏–∑ —Ä–µ—Ü–µ–ø—Ç–æ–≤, —Ä–∞–∑–¥–µ–ª—ë–Ω–Ω—ã–π –Ω–∞ 5 —á–∞—Å—Ç–µ–π –ø–æ 20-—Ç—å —Ä–µ—Ü–µ–ø—Ç–æ–≤. –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞\
 –ª—é–±–æ–≥–æ —Ä–µ—Ü–µ–ø—Ç–∞ –∏–∑ —Å–ø–∏—Å–∫–∞ - –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–µ—Ü–µ–ø—Ç" –ø–æ–¥ —Ñ–æ—Ç–æ –±–ª—é–¥–∞. –ü—Ä–∏ –≤—ã–¥–∞—á–µ —Å–ø–∏—Å–∫–∞ —Ä–µ—Ü–µ–ø—Ç–æ–≤ –≤–Ω–∏–∑—É –ø–æ—è–≤–ª—è—é—Ç—Å—è –∫–Ω–æ–ø–∫–∏:\n"1 - 5" - –ø–µ—Ä–µ—Ö–æ–¥—ã\
 –Ω–∞ —Å–ª–µ–¥—É—â–∏–π —Å–ø–∏—Å–æ–∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ (–¥–æ 20-—Ç–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É);\n"–ù–∞—á–∞—Ç—å –Ω–æ–≤—ã–π –ø–æ–∏—Å–∫" - –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –±–ª—é–¥–∞.\n\
–°—Ç–æ–∏—Ç –æ—Ç–º–µ—Ç–∏—Ç—å —Ç–æ, —á—Ç–æ —á–µ–º —Ç–æ—á–Ω–µ–µ –±—É–¥–µ—Ç –í–∞—à –∑–∞–ø—Ä–æ—Å, —Ç–µ–º —Ç–æ—á–Ω–µ–µ –ø–æ–∏—Å–∫ –≤—ã–¥–∞—Å—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç. –í—ã–¥–∞—á–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∞ –¥–æ 100 —Ä–µ—Ü–µ–ø—Ç–æ–≤ –∑–∞ –∑–∞–ø—Ä–æ—Å,\
 —Ç.–∫. –¥–∞–ª—å–Ω–µ–π—à–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ –∑–∞–ø—Ä–æ—Å—É —Å–Ω–∏–∂–∞–µ—Ç—Å—è (—Å–Ω–∏–∂–∞–µ—Ç—Å—è —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç—å).\n‚ùóÔ∏è–í —Å–ª—É—á–∞–µ –µ—Å–ª–∏ –í—ã –æ—á–∏—Å—Ç–∏–ª–∏ —á–∞—Ç –æ—Ç –ø–µ—Ä–µ–ø–∏—Å–∫–∏ —Å –±–æ—Ç–æ–º, —Ç–æ\
 –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É /new_search –∏–ª–∏ /start (–≤ –º–µ–Ω—é –∫–æ–º–∞–Ω–¥) –Ω–∞—á–∏–Ω–∞—Ç—å –Ω–æ–≤—ã–π –ø–æ–∏—Å–∫.')

@bot.message_handler(content_types=['text'])
def search_text(message):											 
	response_status = pars.get_html(message.text.lower())
	global task_switcher
	if response_status is not int:
		search_status = pars.search_status()
		if search_status == 'ok':
			if task_switcher and '–ù–∞—á–∞—Ç—å –Ω–æ–≤—ã–π –ø–æ–∏—Å–∫' not in message.text:
				pars.current_search = message.text.lower()
				menu_keyboard = types.ReplyKeyboardMarkup(row_width=5, resize_keyboard=True, one_time_keyboard=True)
				menu_button1 = types.KeyboardButton('1')
				menu_button2 = types.KeyboardButton('2')
				menu_button3 = types.KeyboardButton('3')
				menu_button4 = types.KeyboardButton('4')
				menu_button5 = types.KeyboardButton('5')
				menu_button_new_search = types.KeyboardButton('–ù–∞—á–∞—Ç—å –Ω–æ–≤—ã–π –ø–æ–∏—Å–∫')
				menu_keyboard.row(menu_button1, menu_button2, menu_button3, menu_button4, menu_button5)
				menu_keyboard.row(menu_button_new_search)
				task_switcher = False
				bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAINNGHxRdAMX6j8BZdNWMN2shxoDYz1AAJqBAACR_sJDOMa1wrTzyP9IwQ')
				bot.send_message(message.chat.id, "–ê –≤–æ—Ç –∏ —Ä–µ—Ü–µ–ø—Ç–∏–∫–∏!", reply_markup=menu_keyboard)
				send_content(message.chat.id)
			else:
				if message.text in '12345':
					send_content(message.chat.id)
				elif '–ù–∞—á–∞—Ç—å –Ω–æ–≤—ã–π –ø–æ–∏—Å–∫' in message.text:
					task_switcher = True
				else:
					bot.delete_message(message.chat.id, message.message_id)
		elif search_status == 'not found' and task_switcher:
			bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAIjPGMNuKGoxFSmoRxzCIQ-_O7xgzIwAAJ-BAACR_sJDPdD7_9PHlkbKQQ')
			bot.send_message(message.chat.id, "–Ø –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞—à—ë–ª. –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑!")
		elif search_status == 'not found' and not task_switcher:
			bot.delete_message(message.chat.id, message.message_id)
	else:
		bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAIiSmMHOAxoovzTafB5ir0VbyjTTctjAAKDBAACR_sJDG8VW4WhLqTWKQQ')
		bot.send_message(message.chat.id, "–û–π! –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –≤–∏–¥–∏–º–æ —Å–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç.")

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–≤–µ—á–∞—é—â–∞—è –∑–∞ –≤—ã–¥–∞—á—É —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞.
# The function responsible for issuing the result of the search query.
def send_content(chat_id):
	find_links = pars.get_links()
	find_image = pars.get_photo_links()
	for num, item in enumerate(zip(find_links.values(), find_image)):
		keyboard = types.InlineKeyboardMarkup()
		recipe_button = types.InlineKeyboardButton(text="–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–µ—Ü–µ–ø—Ç", callback_data=str(num))
		keyboard.add(recipe_button)
		bot.send_photo(chat_id, item[1], caption=item[0][0], protect_content=True, reply_markup=keyboard)
		bot.send_chat_action(chat_id, 'typing')

# –î–µ–∫–æ—Ä–∞—Ç–æ—Ä –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ callback –∑–∞–ø—Ä–æ—Å–æ–≤ —Å —Ñ—É–Ω–∫—Ü–∏–µ–π, –≤—ã–¥–∞—é—â–∞—è –Ω–∞–º –ø–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç —Ä–µ—Ü–µ–ø—Ç–∞.
# Callback query handler de—Åorator with a function that gives us the full text of the recipe.
@bot.callback_query_handler(func=lambda call: True)
def callback_catcher(call):
	pars.get_html(pars.ready_items[call.data][1])
	recipe_text = pars.get_detailed_recipe()
	bot.send_message(call.message.chat.id, pars.ready_items[call.data][0] +' üëÄ')
	bot.send_message(call.message.chat.id, recipe_text)


if __name__ == "__main__":
	bot.infinity_polling()